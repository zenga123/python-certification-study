숫자
파이썬에서 일반적인 나눗셈(/)을 하면 항상 소수점을 포함함.

소수점 없이 정수 결과만 원한다면 (//)을 사용해야됨.

**는 제곱을 의미함.

4 * 3.75 - 1
이 같이 정수와 실수가 연산을 하면 답은 실수가됨. 답 : 14.0


문자
문자열 안에 따옴표 자체를 넣고 싶으면 이스케이프 문자인 \(백슬래쉬)를 사용해야됨 (ex : "가나다\'가나다")
"doesn't"   # 또는 이중 따옴표로 둘러싸면 백슬래시 없이도 가능
'"Yes," they said.'       # 바깥이 단일 따옴표일 때 내부에 이중 따옴표 사용 가능

\n : 줄바꿈
\ 뒤에 나오는 문자가 특수 문자로 취급되게 하고 싶지 않다면, 첫 따옴표 앞에 r 을 붙여서 raw string)을 만들 수 있음
print(r'C:\some\name')  #C:\some\name

문자열 인덱스
word = 'Python'
word[0]  #'P'
-0은 0과 같으므로, 음의 인덱스는 -1에서 시작한다는 것에 주의

-를 하면 뒤에서 부터 샘
word[-1]  #'n'

슬라이스 인덱스
word[:2]   #'Py'
word[4:]   #'on'
word[-2:]  #'on'

word[42]  #인덱스 범위가 넘어가면 에러가나옴

하지만, 범위를 벗어나는 슬라이스 인덱스는 슬라이싱할 때 에러가 나오지않음
word[4:42]
'on'
word[42:]
''

word[0] = 'J' 이렇게 대입하면 에러가 나옴

다른 문자열이 필요하면 새로 만들어야 됨
'J' + word[1:]
'Jython'
word[:2] + 'py'
'Pypy'

리스트
squares = [1, 4, 9, 16, 25]
squares + [36, 49, 64, 81, 100] #이러면 이어 붙이기 가능. 결과 : [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

불변인 문자열과 달리 리스트는 대입 가능
squares[3] = 64

newlist_squares = squares[:] #이렇게 하면 완전 새로운 newlist_squares를 만드는것. 혹시 newlist_squares = squares 이렇게 할 경우는 newlist_squares의 값이 변경되면 squares의 값도 함께 변경됨
